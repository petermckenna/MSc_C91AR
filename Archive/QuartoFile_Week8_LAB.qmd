---
title: "QuartoCorrelationLabWk8"
format: html
editor: visual
---

# Load Packages

```{r}
#| message: false
library(tidyverse)
library(GGally)
library(corrr)
library(psych)

```

# Set the Seed

```{r}
set.seed(49)

```

# Read in the Data setting col types

```{r}
tstandrt <- 
  read_csv("data_raw/trust_and_rt.csv",
         col_types = "dd")
```

# Examine the Data

```{r}
glimpse(tstandrt)
describe(tstandrt)
```

There are 563 observations in both vectors. The mean `trust_score` was 50.08 (SD = 1.02). The mean score for `response_time` was 1262.41(SD = 1.01).

Measures of skew (0.15) and kurtosis (-0.07) indicated that trust_score was normally distributed

Measures of skew (0.10) and kurtosis (0.00) indicated that response_time was also normally distributed

# Scatter plot of trust and response time

```{r}
ggplot(data = tstandrt,
       mapping = aes(x = trust_score, y = resp_time)) +
  geom_point(alpha = .6) +
  labs(x = "\nTrustScore)", 
       y = "Response Time(ms)\n")
```

It appears from the scatterplot that the relationship between trust and response time is linear.

# Calculate statistics for MASS::mvrnorm

```{r}
tstandrt|>
summarise(mean_trs = mean(trust_score),
          sd_trs = sd(trust_score),
          mean_rt = mean(resp_time),
          sd_rt = sd(resp_time)) |>
  mutate_if(is.numeric, round, digits = 2)
```

```{r}
#Calculate correlation

  cor(tstandrt$resp_time, tstandrt$trust_score)
```

The correlation between resp_time and trust_score vectors is 0.802

# Create Covariance Matrix for MASS::mvrnorm

```{r}
# define and store covariance
my_cov <- 
  0.80*1.02*1.01

#use the matrix function to deifnne our sigma
my_sigma <- 
  matrix(c(1.02^2, my_cov,
           my_cov, 1.01^2),
         ncol = 2)

my_sigma
```

# Simulate a small sample

```{r}
# Trying to simulate 10 participants
sim10tstandrt <- 
  MASS::mvrnorm(n = 10,
                mu = c(resp_time = 1262.41,
                       trust_score = 50.08),
                Sigma = my_sigma) 
#view the output
sim10tstandrt 
```

This has produced simulated data for 10 simulated participants.

# Simulate a large sample

```{r}
#Simulating 1000 participants
sim1000tstandrt <- 
  MASS::mvrnorm(n = 1000,
                mu = c(resp_time = 1262.41,
                       trust_score = 50.08),
                Sigma = my_sigma) |>
  as_tibble() |>
  mutate(type = "simulated")

#view the output
sim1000tstandrt
```

This has simulated 1000 responses

# Combining real and simulated data

```{r}
all_data <- 
  bind_rows(tstandrt |>
              mutate(type = "real"),
            sim1000tstandrt)
```

# Plot the full simulated data

```{r}
#plot the data
ggplot(all_data,
       aes(x = trust_score,
           y = resp_time)) +
  geom_point(aes(colour = type),
             alpha = .6) +
  labs( x = "\nTrusr Score",
        y = "Response time (ms) \n",
        colour = "Data type",
        title = "Trust and response time (ms) relationship \n for real simulated")
```

# Saving everything

```{r}
write_csv(all_data, "data_tidy/simulated_trstandrt.csv")
```